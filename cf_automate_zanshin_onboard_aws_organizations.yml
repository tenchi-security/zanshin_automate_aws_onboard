Description: >
  Template for Zanshin Automatic Onboard of AWS Accounts
Parameters:
  ZanshinSecretArn:
    Type: String
    Description: The ARN of the Secrets Manager that contains the Zanshin API Key.
  ZanshinOrganizationUUID:
    Type: String
    Description: The UUID of the Zanshin Organization to onboard AWS Accounts to.
  MemberAccountsRoleName:
    Type: String
    Default: OrganizationAccountAccessRole
    Description: The name of the role which Zanshin will assume in Member accounts to perform onboard.
  AwsOrganizationsId:
    Type: String
    Description: The ID of your AWS Organizations.
  ZanshinAutomationHTTPSProxyURL:
    Type: String
    Description: HTTPS Proxy URL for Zanshin Automate Task
    Default: ''
  ZanshinAutomationCronExpression:
    Type: String
    Default: cron(0 12 * * ? *)
    Description: Cron expression for the Automation Scheduler (e.g. Every day at 12:00 UTC).
  ZanshinAutomationExcludeAccounts:
    Type: String    
    Description: AWS Accounts ID, Name or E-mail to ignore when performing Automate Onboard
  ZanshinOnboardAwsRegion:
    Type: String
    Default: us-east-1
    Description: The name of the AWS Region you want Zanshin Onboard to deploy CloudFormation to
  AWSExistingVPCId:
    Type: String
    Description: The VPC Id for the Zanshin Automate Task
  AWSExistingPrivateOrPublicSubnetId:
    Type: String
    Description: The Subnet Id for the Zanshin Automate Task
  TargetAssignPublicIP:
    Type: String
    Default: DISABLED
    Description: Define if Public IP should be assigned (e.g DISABLED or ENABLED)
Resources:
  zanshinAutomateOnboardECSCluster:
    Type: AWS::ECS::Cluster
  zanshinautomatetaskdefinitionTaskRole531763C5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyName: task-execution-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: sts:AssumeRole
                Condition:
                  StringEquals:
                    aws:PrincipalOrgID:
                      - Ref: AwsOrganizationsId
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - arn:aws:iam::*:role/
                      - Ref: MemberAccountsRoleName
              - Action:
                  - organizations:DescribeOrganization
                  - organizations:ListAccounts
                Effect: Allow
                Resource: "*"
    
  zanshinautomatetaskdefinition77B93A6C:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - EntryPoint:
            - /bin/bash
            - -c
            - pip install zanshincli && zanshin version && zanshin account me && zanshin organization scan_target onboard_aws_organization ${ZANSHIN_ONBOARD_AWS_REGION} ${ZANSHIN_ORGANIZATION_UUID} --aws-role-name ${ZANSHIN_ROLE_NAME} --target-accounts MEMBERS `for i in $(echo $ZANSHIN_AUTOMATE_EXCLUDE_ACCOUNTS | sed "s/,/ /g"); do echo --exclude-account "$i"; done`
          Environment:
            - Name: ZANSHIN_AUTOMATE_EXCLUDE_ACCOUNTS
              Value:
                Ref: ZanshinAutomationExcludeAccounts
            - Name: ZANSHIN_ORGANIZATION_UUID
              Value:
                Ref: ZanshinOrganizationUUID
            - Name: HTTPS_PROXY
              Value:
                Ref: ZanshinAutomationHTTPSProxyURL
            - Name: ZANSHIN_ONBOARD_AWS_REGION
              Value:
                Ref: ZanshinOnboardAwsRegion
            - Name: ZANSHIN_ROLE_NAME
              Value:
                Ref: MemberAccountsRoleName
          Essential: true
          Image: public.ecr.aws/bitnami/python:3.9
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: zanshinautomatetaskdefinitionZanshinAutomateOnboardContainerLogGroupAA17AD72
              awslogs-stream-prefix: Zanshin-Automate-Onboard-Fargate
              awslogs-region:
                Ref: 'AWS::Region'
          Memory: 512
          Name: ZanshinAutomateOnboardContainer
          Secrets:
            - Name: ZANSHIN_API_KEY
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: ZanshinSecretArn
                    - ":api_key::"
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - zanshinautomatetaskdefinitionExecutionRole9FD191ED
          - Arn
      Family: ZanshinAutomateAWSOrganizationOnboardzanshinautomatetaskdefinitionE85273DF
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: X86_64
        OperatingSystemFamily: LINUX
      TaskRoleArn:
        Fn::GetAtt:
          - zanshinautomatetaskdefinitionTaskRole531763C5
          - Arn
    
  zanshinautomatetaskdefinitionExecutionRole9FD191ED:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    
  zanshinautomatetaskdefinitionExecutionRoleDefaultPolicyFF04873A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - zanshinautomatetaskdefinitionZanshinAutomateOnboardContainerLogGroupAA17AD72
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: ZanshinSecretArn
        Version: "2012-10-17"
      PolicyName: zanshinautomatetaskdefinitionExecutionRoleDefaultPolicyFF04873A
      Roles:
        - Ref: zanshinautomatetaskdefinitionExecutionRole9FD191ED
    
  zanshinautomatetaskdefinitionZanshinAutomateOnboardContainerLogGroupAA17AD72:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    
  zanshinautomatetaskdefinitionEventsRoleE2143A4D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com          
        Version: "2012-10-17"

      
  zanshinautomatetaskdefinitionEventsRoleDefaultPolicy54E15E2B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ecs:RunTask
            Condition:
              ArnEquals:
                ecs:cluster:
                  Fn::GetAtt:
                    - zanshinAutomateOnboardECSCluster
                    - Arn
            Effect: Allow
            Resource:
              Ref: zanshinautomatetaskdefinition77B93A6C
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - zanshinautomatetaskdefinitionExecutionRole9FD191ED
                - Arn
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - zanshinautomatetaskdefinitionTaskRole531763C5
                - Arn
        Version: "2012-10-17"
      PolicyName: zanshinautomatetaskdefinitionEventsRoleDefaultPolicy54E15E2B
      Roles:
        - Ref: zanshinautomatetaskdefinitionEventsRoleE2143A4D
    
  ZanshinAutomateOnboardTaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Zanshin Automate Onboard SG - Allow HTTPS outbound and no inbound
      VpcId: 
        Ref: AWSExistingVPCId
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  
  zanshinautomateonboardtaskScheduledEventRule6F5D5E1A:
    Type: AWS::Events::Rule
    Description: Trigger for Zanshin Automatic Onboard of AWS Accounts
    Properties:
      ScheduleExpression:
        Ref: ZanshinAutomationCronExpression
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - zanshinAutomateOnboardECSCluster
              - Arn
          EcsParameters:
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: 
                  Ref: "TargetAssignPublicIP"
                SecurityGroups:
                  - Ref: ZanshinAutomateOnboardTaskSecurityGroup
                Subnets:
                  - Ref: AWSExistingPrivateOrPublicSubnetId
            TaskCount: 1
            TaskDefinitionArn:
              Ref: zanshinautomatetaskdefinition77B93A6C
          Id: Target0
          Input: "{}"
          RoleArn:
            Fn::GetAtt:
              - zanshinautomatetaskdefinitionEventsRoleE2143A4D
              - Arn
